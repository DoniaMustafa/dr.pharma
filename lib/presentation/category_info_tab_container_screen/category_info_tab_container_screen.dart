import '../category_info_tab_container_screen/widgets/userprofile1_item_widget.dart';import 'bloc/category_info_tab_container_bloc.dart';import 'models/category_info_tab_container_model.dart';import 'models/userprofile1_item_model.dart';import 'package:carousel_slider/carousel_slider.dart';import 'package:dondondony38_s_application1/core/app_export.dart';import 'package:dondondony38_s_application1/presentation/category_info_page/category_info_page.dart';import 'package:dondondony38_s_application1/widgets/app_bar/appbar_leading_image.dart';import 'package:dondondony38_s_application1/widgets/app_bar/appbar_subtitle.dart';import 'package:dondondony38_s_application1/widgets/app_bar/custom_app_bar.dart';import 'package:flutter/material.dart';import 'package:smooth_page_indicator/smooth_page_indicator.dart';class CategoryInfoTabContainerScreen extends StatefulWidget {const CategoryInfoTabContainerScreen({Key? key}) : super(key: key);

@override CategoryInfoTabContainerScreenState createState() =>  CategoryInfoTabContainerScreenState();

static Widget builder(BuildContext context) { return BlocProvider<CategoryInfoTabContainerBloc>(create: (context) => CategoryInfoTabContainerBloc(CategoryInfoTabContainerState(categoryInfoTabContainerModelObj: CategoryInfoTabContainerModel()))..add(CategoryInfoTabContainerInitialEvent()), child: CategoryInfoTabContainerScreen()); } 
 }

// ignore_for_file: must_be_immutable
class CategoryInfoTabContainerScreenState extends State<CategoryInfoTabContainerScreen> with  TickerProviderStateMixin {late TabController tabviewController;

@override void initState() { super.initState(); tabviewController = TabController(length: 4, vsync: this); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(appBar: _buildAppBar(context), body: SizedBox(width: mediaQueryData.size.width, child: SingleChildScrollView(padding: EdgeInsets.only(top: 13.v), child: Column(children: [_buildCategoryInfo(context), SizedBox(height: 26.v), _buildTabview(context), SizedBox(height: 464.v, child: TabBarView(controller: tabviewController, children: [CategoryInfoPage(), CategoryInfoPage(), CategoryInfoPage(), CategoryInfoPage()]))]))))); } 
/// Section Widget
PreferredSizeWidget _buildAppBar(BuildContext context) { return CustomAppBar(leadingWidth: 34.h, leading: AppbarLeadingImage(imagePath: ImageConstant.imgGroup1Black90001, margin: EdgeInsets.only(left: 29.h, top: 20.v, bottom: 24.v)), centerTitle: true, title: AppbarSubtitle(text: "lbl_beauty_tools2".tr)); } 
/// Section Widget
Widget _buildCategoryInfo(BuildContext context) { return Container(padding: EdgeInsets.symmetric(horizontal: 29.h), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Padding(padding: EdgeInsets.only(left: 11.h), child: BlocBuilder<CategoryInfoTabContainerBloc, CategoryInfoTabContainerState>(builder: (context, state) {return CarouselSlider.builder(options: CarouselOptions(height: 200.v, initialPage: 0, autoPlay: true, viewportFraction: 1.0, enableInfiniteScroll: false, scrollDirection: Axis.horizontal, onPageChanged: (index, reason) {state.sliderIndex = index;}), itemCount: state.categoryInfoTabContainerModelObj?.userprofile1ItemList.length ?? 0, itemBuilder: (context, index, realIndex) {Userprofile1ItemModel model = state.categoryInfoTabContainerModelObj?.userprofile1ItemList[index] ?? Userprofile1ItemModel(); return Userprofile1ItemWidget(model, onTapTxtSeeAll: () {onTapTxtSeeAll(context);});});})), SizedBox(height: 14.v), BlocBuilder<CategoryInfoTabContainerBloc, CategoryInfoTabContainerState>(builder: (context, state) {return Container(height: 7.v, margin: EdgeInsets.only(left: 130.h), child: AnimatedSmoothIndicator(activeIndex: state.sliderIndex, count: state.categoryInfoTabContainerModelObj?.userprofile1ItemList.length ?? 0, axisDirection: Axis.horizontal, effect: ScrollingDotsEffect(spacing: 4, activeDotColor: theme.colorScheme.primary, dotColor: theme.colorScheme.primary.withOpacity(0.49), dotHeight: 4.v, dotWidth: 6.h)));})])); } 
/// Section Widget
Widget _buildTabview(BuildContext context) { return Container(height: 27.v, width: double.maxFinite, child: TabBar(controller: tabviewController, labelPadding: EdgeInsets.zero, labelColor: theme.colorScheme.primary, labelStyle: TextStyle(fontSize: 14.fSize, fontFamily: 'Poppins', fontWeight: FontWeight.w700), unselectedLabelColor: appTheme.gray50001, unselectedLabelStyle: TextStyle(fontSize: 14.fSize, fontFamily: 'Poppins', fontWeight: FontWeight.w400), indicatorColor: theme.colorScheme.primary, tabs: [Tab(child: Text("lbl_all".tr)), Tab(child: Text("lbl_makeup".tr)), Tab(child: Text("lbl_skin_care".tr)), Tab(child: Text("lbl_hair_care".tr))])); } 
/// Navigates to the categoryTabContainerScreen when the action is triggered.
onTapTxtSeeAll(BuildContext context) { NavigatorService.pushNamed(AppRoutes.categoryTabContainerScreen, ); } 
 }
