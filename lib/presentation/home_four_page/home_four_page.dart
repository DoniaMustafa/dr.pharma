import '../home_four_page/widgets/merkcomponent_item_widget.dart';import '../home_four_page/widgets/productcardgrid_item_widget.dart';import '../home_four_page/widgets/userprofileslider_item_widget.dart';import 'bloc/home_four_bloc.dart';import 'models/home_four_model.dart';import 'models/merkcomponent_item_model.dart';import 'models/productcardgrid_item_model.dart';import 'models/userprofileslider_item_model.dart';import 'package:carousel_slider/carousel_slider.dart';import 'package:dondondony38_s_application1/core/app_export.dart';import 'package:dondondony38_s_application1/widgets/app_bar/appbar_leading_circleimage.dart';import 'package:dondondony38_s_application1/widgets/app_bar/appbar_subtitle_five.dart';import 'package:dondondony38_s_application1/widgets/app_bar/appbar_subtitle_four.dart';import 'package:dondondony38_s_application1/widgets/app_bar/appbar_trailing_iconbutton.dart';import 'package:dondondony38_s_application1/widgets/app_bar/custom_app_bar.dart';import 'package:dondondony38_s_application1/widgets/custom_search_view.dart';import 'package:flutter/material.dart';class HomeFourPage extends StatelessWidget {const HomeFourPage({Key? key}) : super(key: key);

static Widget builder(BuildContext context) { return BlocProvider<HomeFourBloc>(create: (context) => HomeFourBloc(HomeFourState(homeFourModelObj: HomeFourModel()))..add(HomeFourInitialEvent()), child: HomeFourPage()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, appBar: _buildAppBar(context), body: SizedBox(width: mediaQueryData.size.width, child: SingleChildScrollView(padding: EdgeInsets.only(top: 15.v), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Align(alignment: Alignment.center, child: Padding(padding: EdgeInsets.only(left: 19.h, right: 25.h), child: BlocSelector<HomeFourBloc, HomeFourState, TextEditingController?>(selector: (state) => state.searchController, builder: (context, searchController) {return CustomSearchView(controller: searchController, hintText: "lbl_search_here".tr, alignment: Alignment.center);}))), SizedBox(height: 27.v), _buildUserProfileSlider(context), SizedBox(height: 37.v), _buildCategoriesColumn(context), SizedBox(height: 43.v), Padding(padding: EdgeInsets.only(left: 28.h), child: Text("lbl_best_offers".tr, style: theme.textTheme.titleMedium)), SizedBox(height: 15.v), _buildProductCardGrid(context)]))))); } 
/// Section Widget
PreferredSizeWidget _buildAppBar(BuildContext context) { return CustomAppBar(leadingWidth: 72.h, leading: AppbarLeadingCircleimage(imagePath: ImageConstant.imgRectangle18623, margin: EdgeInsets.only(left: 21.h, top: 2.v, bottom: 2.v), onTap: () {onTapCircleImage(context);}), title: Padding(padding: EdgeInsets.only(left: 7.h), child: Column(children: [AppbarSubtitleFive(text: "lbl_a_z_pharmacy".tr), AppbarSubtitleFour(text: "lbl_egypt2".tr, margin: EdgeInsets.only(right: 65.h))])), actions: [AppbarTrailingIconbutton(imagePath: ImageConstant.img8134640GiftBi, margin: EdgeInsets.fromLTRB(26.h, 2.v, 26.h, 5.v), onTap: () {onTapGiftBi(context);})]); } 
/// Section Widget
Widget _buildUserProfileSlider(BuildContext context) { return BlocBuilder<HomeFourBloc, HomeFourState>(builder: (context, state) {return CarouselSlider.builder(options: CarouselOptions(height: 200.v, initialPage: 0, autoPlay: true, viewportFraction: 1.0, enableInfiniteScroll: false, scrollDirection: Axis.horizontal, onPageChanged: (index, reason) {state.sliderIndex = index;}), itemCount: state.homeFourModelObj?.userprofilesliderItemList.length ?? 0, itemBuilder: (context, index, realIndex) {UserprofilesliderItemModel model = state.homeFourModelObj?.userprofilesliderItemList[index] ?? UserprofilesliderItemModel(); return UserprofilesliderItemWidget(model);});}); } 
/// Section Widget
Widget _buildCategoriesColumn(BuildContext context) { return Container(padding: EdgeInsets.symmetric(horizontal: 23.h), child: Column(crossAxisAlignment: CrossAxisAlignment.end, children: [Row(mainAxisAlignment: MainAxisAlignment.end, crossAxisAlignment: CrossAxisAlignment.start, children: [Text("lbl_categories".tr, style: theme.textTheme.titleMedium), GestureDetector(onTap: () {onTapTxtSeeAll(context);}, child: Padding(padding: EdgeInsets.only(left: 206.h, bottom: 3.v), child: Text("lbl_see_all".tr, style: CustomTextStyles.titleSmallPoppinsBlack90001Medium_3))), CustomImageView(imagePath: ImageConstant.imgArrowRightBlack90001, height: 10.v, width: 5.h, margin: EdgeInsets.only(left: 4.h, top: 7.v, bottom: 9.v), onTap: () {onTapImgArrowRight(context);})]), SizedBox(height: 19.v), SizedBox(height: 97.v, child: BlocSelector<HomeFourBloc, HomeFourState, HomeFourModel?>(selector: (state) => state.homeFourModelObj, builder: (context, homeFourModelObj) {return ListView.separated(padding: EdgeInsets.only(left: 266.h, right: 5.h), scrollDirection: Axis.horizontal, separatorBuilder: (context, index) {return SizedBox(width: 47.h);}, itemCount: homeFourModelObj?.merkcomponentItemList.length ?? 0, itemBuilder: (context, index) {MerkcomponentItemModel model = homeFourModelObj?.merkcomponentItemList[index] ?? MerkcomponentItemModel(); return MerkcomponentItemWidget(model, onTapMerkComponent: () {onTapMerkComponent(context);});});}))])); } 
/// Section Widget
Widget _buildProductCardGrid(BuildContext context) { return Align(alignment: Alignment.center, child: Padding(padding: EdgeInsets.symmetric(horizontal: 22.h), child: BlocSelector<HomeFourBloc, HomeFourState, HomeFourModel?>(selector: (state) => state.homeFourModelObj, builder: (context, homeFourModelObj) {return GridView.builder(shrinkWrap: true, gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(mainAxisExtent: 319.v, crossAxisCount: 2, mainAxisSpacing: 21.h, crossAxisSpacing: 21.h), physics: NeverScrollableScrollPhysics(), itemCount: homeFourModelObj?.productcardgridItemList.length ?? 0, itemBuilder: (context, index) {ProductcardgridItemModel model = homeFourModelObj?.productcardgridItemList[index] ?? ProductcardgridItemModel(); return ProductcardgridItemWidget(model);});}))); } 
/// Navigates to the categoryInfoTwoScreen when the action is triggered.
onTapMerkComponent(BuildContext context) { NavigatorService.pushNamed(AppRoutes.categoryInfoTwoScreen); } 
/// Navigates to the profileScreen when the action is triggered.
onTapCircleImage(BuildContext context) { NavigatorService.pushNamed(AppRoutes.profileScreen, ); } 
/// Navigates to the categoryInfoOneScreen when the action is triggered.
onTapGiftBi(BuildContext context) { NavigatorService.pushNamed(AppRoutes.categoryInfoOneScreen, ); } 
/// Navigates to the categoryTabContainerScreen when the action is triggered.
onTapTxtSeeAll(BuildContext context) { NavigatorService.pushNamed(AppRoutes.categoryTabContainerScreen, ); } 
/// Navigates to the categoryTabContainerScreen when the action is triggered.
onTapImgArrowRight(BuildContext context) { NavigatorService.pushNamed(AppRoutes.categoryTabContainerScreen, ); } 
 }
