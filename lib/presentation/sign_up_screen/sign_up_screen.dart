import 'bloc/sign_up_bloc.dart';import 'models/sign_up_model.dart';import 'package:dondondony38_s_application1/core/app_export.dart';import 'package:dondondony38_s_application1/core/utils/validation_functions.dart';import 'package:dondondony38_s_application1/widgets/custom_icon_button.dart';import 'package:dondondony38_s_application1/widgets/custom_text_form_field.dart';import 'package:flutter/material.dart';import 'package:dondondony38_s_application1/presentation/sign_up_two_bottomsheet/sign_up_two_bottomsheet.dart';
// ignore_for_file: must_be_immutable
class SignUpScreen extends StatelessWidget {SignUpScreen({Key? key}) : super(key: key);

GlobalKey<FormState> _formKey = GlobalKey<FormState>();

static Widget builder(BuildContext context) { return BlocProvider<SignUpBloc>(create: (context) => SignUpBloc(SignUpState(signUpModelObj: SignUpModel()))..add(SignUpInitialEvent()), child: SignUpScreen()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, body: Form(key: _formKey, child: Container(width: double.maxFinite, padding: EdgeInsets.all(36.h), child: Column(children: [Align(alignment: Alignment.centerLeft, child: Container(width: 182.h, margin: EdgeInsets.only(left: 4.h), child: Text("msg_create_an_account".tr, maxLines: 2, overflow: TextOverflow.ellipsis, style: theme.textTheme.displaySmall!.copyWith(height: 1.19)))), SizedBox(height: 30.v), _buildCountry(context), SizedBox(height: 22.v), _buildPhone(context), SizedBox(height: 22.v), _buildEmail(context), SizedBox(height: 22.v), _buildPassword(context), SizedBox(height: 22.v), _buildConfirmpassword(context), SizedBox(height: 78.v), _buildContinue(context), SizedBox(height: 57.v), GestureDetector(onTap: () {onTapTxtYoudonthaveaccount3(context);}, child: RichText(text: TextSpan(children: [TextSpan(text: "msg_you_don_t_have_account2".tr, style: CustomTextStyles.bodyMediumJFFlatBluegray600), TextSpan(text: "lbl_sign_in2".tr, style: CustomTextStyles.bodyMediumJFFlatRed700.copyWith(decoration: TextDecoration.underline))]), textAlign: TextAlign.left)), SizedBox(height: 5.v)]))))); } 
/// Section Widget
Widget _buildCountry(BuildContext context) { return Padding(padding: EdgeInsets.only(left: 4.h, right: 1.h), child: BlocSelector<SignUpBloc, SignUpState, TextEditingController?>(selector: (state) => state.countryController, builder: (context, countryController) {return CustomTextFormField(controller: countryController, hintText: "lbl_your_country".tr, hintStyle: CustomTextStyles.bodyMediumAlmaraiGray700, prefix: Container(margin: EdgeInsets.fromLTRB(15.h, 14.v, 11.h, 24.v), child: CustomImageView(imagePath: ImageConstant.img8665619maplocationicon1, height: 20.v, width: 22.h)), prefixConstraints: BoxConstraints(maxHeight: 58.v), contentPadding: EdgeInsets.only(top: 21.v, right: 30.h, bottom: 21.v));})); } 
/// Section Widget
Widget _buildPhone(BuildContext context) { return Padding(padding: EdgeInsets.only(left: 4.h, right: 3.h), child: BlocSelector<SignUpBloc, SignUpState, TextEditingController?>(selector: (state) => state.phoneController, builder: (context, phoneController) {return CustomTextFormField(controller: phoneController, hintText: "lbl_phone".tr, hintStyle: CustomTextStyles.bodyMediumGray700, textInputType: TextInputType.phone, prefix: Container(margin: EdgeInsets.fromLTRB(18.h, 16.v, 6.h, 18.v), child: CustomImageView(imagePath: ImageConstant.img1564515calldevicemobilephonesmartphoneicon1, height: 24.adaptSize, width: 24.adaptSize)), prefixConstraints: BoxConstraints(maxHeight: 58.v), validator: (value) {if (!isValidPhone(value)) {return "err_msg_please_enter_valid_phone_number".tr;} return null;});})); } 
/// Section Widget
Widget _buildEmail(BuildContext context) { return Padding(padding: EdgeInsets.only(left: 4.h, right: 3.h), child: BlocSelector<SignUpBloc, SignUpState, TextEditingController?>(selector: (state) => state.emailController, builder: (context, emailController) {return CustomTextFormField(controller: emailController, hintText: "lbl_email".tr, hintStyle: CustomTextStyles.bodyMediumGray700, textInputType: TextInputType.emailAddress, prefix: Container(margin: EdgeInsets.fromLTRB(17.h, 17.v, 9.h, 19.v), child: CustomImageView(imagePath: ImageConstant.imgBxlgmail, height: 22.adaptSize, width: 22.adaptSize)), prefixConstraints: BoxConstraints(maxHeight: 58.v), validator: (value) {if (value == null || (!isValidEmail(value, isRequired: true))) {return "err_msg_please_enter_valid_email".tr;} return null;});})); } 
/// Section Widget
Widget _buildPassword(BuildContext context) { return Padding(padding: EdgeInsets.only(left: 4.h, right: 3.h), child: BlocBuilder<SignUpBloc, SignUpState>(builder: (context, state) {return CustomTextFormField(controller: state.passwordController, hintText: "lbl_password".tr, hintStyle: CustomTextStyles.bodyMediumAlmaraiGray700, textInputType: TextInputType.visiblePassword, prefix: Container(margin: EdgeInsets.fromLTRB(21.h, 18.v, 9.h, 18.v), child: CustomImageView(imagePath: ImageConstant.imgLocationGray500, height: 21.v, width: 16.h)), prefixConstraints: BoxConstraints(maxHeight: 58.v), suffix: InkWell(onTap: () {context.read<SignUpBloc>().add(ChangePasswordVisibilityEvent(value: !state.isShowPassword));}, child: Container(margin: EdgeInsets.fromLTRB(30.h, 18.v, 11.h, 18.v), child: CustomImageView(imagePath: ImageConstant.imgEyeGray500, height: 21.adaptSize, width: 21.adaptSize))), suffixConstraints: BoxConstraints(maxHeight: 58.v), validator: (value) {if (value == null || (!isValidPassword(value, isRequired: true))) {return "err_msg_please_enter_valid_password".tr;} return null;}, obscureText: state.isShowPassword, contentPadding: EdgeInsets.symmetric(vertical: 21.v));})); } 
/// Section Widget
Widget _buildConfirmpassword(BuildContext context) { return Padding(padding: EdgeInsets.only(left: 4.h, right: 3.h), child: BlocBuilder<SignUpBloc, SignUpState>(builder: (context, state) {return CustomTextFormField(controller: state.confirmpasswordController, hintText: "msg_confirm_password".tr, hintStyle: CustomTextStyles.bodyMediumAlmaraiGray700, textInputAction: TextInputAction.done, textInputType: TextInputType.visiblePassword, prefix: Container(margin: EdgeInsets.fromLTRB(21.h, 18.v, 10.h, 18.v), child: CustomImageView(imagePath: ImageConstant.imgLocation, height: 21.v, width: 16.h)), prefixConstraints: BoxConstraints(maxHeight: 58.v), suffix: InkWell(onTap: () {context.read<SignUpBloc>().add(ChangePasswordVisibilityEvent1(value: !state.isShowPassword1));}, child: Container(margin: EdgeInsets.fromLTRB(30.h, 18.v, 11.h, 18.v), child: CustomImageView(imagePath: ImageConstant.imgEye, height: 21.adaptSize, width: 21.adaptSize))), suffixConstraints: BoxConstraints(maxHeight: 58.v), validator: (value) {if (value == null || (!isValidPassword(value, isRequired: true))) {return "err_msg_please_enter_valid_password".tr;} return null;}, obscureText: state.isShowPassword1, contentPadding: EdgeInsets.symmetric(vertical: 21.v));})); } 
/// Section Widget
Widget _buildContinue(BuildContext context) { return Padding(padding: EdgeInsets.only(left: 4.h), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: EdgeInsets.only(top: 7.v, bottom: 8.v), child: Text("lbl_continue".tr, style: theme.textTheme.headlineMedium)), CustomIconButton(height: 55.adaptSize, width: 55.adaptSize, padding: EdgeInsets.all(19.h), onTap: () {onTapBtnArrowLeft(context);}, child: CustomImageView(imagePath: ImageConstant.imgArrowLeft))])); } 

/// Displays a bottom sheet widget using the [showModalBottomSheet] method 
/// of the [Scaffold] class with [isScrollControlled] set to true.
///
/// The bottom sheet is built using the [SignUpTwoBottomsheet]
/// class and the [builder] method of the bottom sheet is passed the
/// [BuildContext] object.
onTapBtnArrowLeft(BuildContext context) { showModalBottomSheet(context: context, builder: (_)=>SignUpTwoBottomsheet.builder(context),isScrollControlled: true); } 
/// Navigates to the signInScreen when the action is triggered.
onTapTxtYoudonthaveaccount3(BuildContext context) { NavigatorService.pushNamed(AppRoutes.signInScreen, ); } 
 }
